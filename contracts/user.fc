#include "imports/stdlib.fc";
#include "imports/op.fc";
int slice_data_equal? (slice a, slice b) asm "SDEQ"; ;; we can move it to stdlib but i want to have it here so ppl will be able to copy-paste the code without issues

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
  slice cs = in_msg_full.begin_parse();
  int flags = cs~load_uint(4);

  if (flags & 1) { ;; ignore bounced messages
    return ();
  }

  slice sender_address = cs~load_msg_addr();
 
  ;; --- get and parse store
  slice ds = get_data().begin_parse();
  slice master_address = ds~load_msg_addr();
  slice owner_addr = ds~load_msg_addr();
  int unlock_timestamp = ds~load_uint(32);
  int locked_amount = ds~load_uint(64);
  ;; --- get and parse store
  
  throw_unless(0x555,
    slice_data_equal?(sender_address, master_address) ;; if not from master sc -> ignore
  ); 
  
  ;; parse incoming msg
  int op = in_msg_body~load_uint(32);
  int query_id = in_msg_body~load_uint(64);
  
  if (op == op::set_user) {
    ;; parse incoming msg
    int new_unlock_timestamp = in_msg_body~load_uint(32); 
    int new_locked_amount = in_msg_body~load_uint(64);
    
    ;; set new data to store
    set_data(
      begin_cell()
      .store_slice(master_address)
      .store_slice(owner_addr)
      .store_uint(new_unlock_timestamp, 32)
      .store_uint(new_locked_amount, 64)
      .end_cell()
    );
    return ();
  }
  
  if (op == op::get_user) {
    ;; if unlock_timestamp has pased we can unlock the funds and finalize unlock process
    throw_if(0x888, unlock_timestamp > now()); ;; if no - error
    
    ;; build unlock finalize tx to master sc with amount 
    var msg = begin_cell()
      .store_uint(0x10, 6) 
      .store_slice(master_address)
      .store_coins(50000000) ;; 0.05 ton for tx fees
      .store_uint(0, 1 + 4 + 4 + 64 + 32)
      .store_uint(1, 2);
  
    ;; body of tx
    var msg_body = begin_cell()
      .store_uint(op::unlock_finalize, 32)
      .store_uint(query_id, 64)
      .store_slice(owner_addr)
      .store_uint(locked_amount, 64)
      .end_cell();

    msg = msg.store_ref(msg_body);
    
    ;; send tx
    send_raw_message(msg.end_cell(), 3);
    
    ;; set empty data to store (cause we have unlocked the funds)
    set_data(
      begin_cell()
      .store_slice(master_address)
      .store_slice(owner_addr)
      .store_uint(0, 32)
      .store_uint(0, 64)
      .end_cell()
    );

    return ();
  }
  
  ;; if wrong op-code -> throw an error
  throw(0xfff); 
}
